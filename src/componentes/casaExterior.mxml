<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="800" height="600" currentState="init"
		 xmlns:components="componentes.*">
	<s:states>
		<s:State name="init"/>
		<s:State name="baul"/>
		<s:State name="plato"/>
	</s:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import clases.*;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
	
			[Bindable]
			public var animalSource:CasaExterior; //Parametro
			[Bindable]
			public var animal:Animal; //Parametro
			[Bindable] 
			public var objetosComida:ArrayCollection; //Parametro
			[Bindable]
			public var objetosJuguete: ArrayCollection; //Parametro
			[Bindable]
			public var sndChannel:SoundChannel; //Parametro
			[Bindable]
			public var snd:Sound;
			//Timer
			[Bindable]
			public var timer:Timer = new Timer(120000); // Timer que se dispara cada 2 minutos
			[Bindable]
			public var timerAviso:Timer = new Timer(600000); //Timer cada 10 minutos
			
			public var alert:Alert;

			
			
			/*Funcion para baÃ±ar al animal*/
			public function banarse():void{
				this.animal.higiene = 100;
				this.animal.experiencia = this.animal.experiencia + 20;
				launchAlert("Swimming!", "Please wait");
				setTimeout(hideAlert, 2000);
				
			}
			
			/*Funcion para alimentar al animal
			/ Recibe el objeto Comida
			*/
			public function alimentar():void{
				if((this.animal.hambre = this.animal.hambre + 20) >100){
					this.animal.hambre = 100;
					
				}
				this.animal.experiencia = this.animal.experiencia + 20;
				launchAlert("Eating!", "Please wait");
				setTimeout(hideAlert, 2000);
			}
		
			/*Funcion para dormir*/
			public function dormir():void{
				this.animal.dormir=100;
				this.animal.experiencia = this.animal.experiencia + 20;
				launchAlert("Sleeping!", "Please wait");
				setTimeout(hideAlert, 2000);
				casaExt.selectedChild=casaInt
			}
			
			/*Funcion para diversion*/
			public function diversion():void{
				if ((this.animal.diversion= this.animal.diversion + 20) >100){
				  this.animal.diversion = 100;
				}
				launchAlert("Having fun!", "Please wait");
				setTimeout(hideAlert, 2000);
				this.animal.experiencia = this.animal.experiencia + 20;
				
			}
		
			private function launchAlert(message:String, title:String = ""):void {
				alert = Alert.show(message, title);
			}
			private function hideAlert():void {
				PopUpManager.removePopUp(alert);
			}
		
		]]>
	</fx:Script>
	


	
	<mx:ViewStack id="casaExt"
				  >
		
	<!-- Exterior -->

	<s:NavigatorContent>
		
		<s:BorderContainer x="0" y="266" width="800" height="334" backgroundColor="#65FD70">
			
			<s:BorderContainer x="41" y="217" width="299" height="105">
				<s:Button x="113" y="34" label="Siembra" icon="{animalSource.imagenSiembra}" />
			</s:BorderContainer>
			
			<s:Button id="botonBaul" x="650" y="100" width="110" height="110" skinClass="skins.casa.baul"
					 
					  click="diversion()"/>
			
			<s:Button id="botonLago" x="95" y="85" width="260" height="100" skinClass="skins.casa.lago"
					  click="banarse()"/>
			
			<s:Button id="botonPlato" x="360" y="250" width="90" height="50" skinClass="skins.casa.plato"
					  click="alimentar()"/>
			
		</s:BorderContainer>
		
		<s:BorderContainer x="0" y="69" width="800" height="199" backgroundColor="#3789EF">
			
			<s:Button id="botonCasa" x="650" y="120" width="120" height="100" skinClass="skins.casa.casa"
					  click="dormir()"/>
						  
			<components:menuIzquierdo animal="@{animal}"
									  timer="@{timer}"
									  timerAviso="@{timerAviso}">
			</components:menuIzquierdo>
					
		</s:BorderContainer>
		
		
		<s:Label x="496" y="296" text="{animal.tipo}"/>
	</s:NavigatorContent>
	
	<!-- Interior -->
		
	<s:NavigatorContent id="casaInt">
		<components:casaInterna animal="{animal}">
			
			
		</components:casaInterna>
		
	</s:NavigatorContent>
		
		
		
	</mx:ViewStack>
	
	<!-- Mapa -->
	<components:menuDerecho animal="@{animal}"
							animalSource="@{animalSource}"
							objetosComida = "{objetosComida}"
							objetosJuguete= "{objetosJuguete}">
		
	</components:menuDerecho>
	
    
	<!-- Menu superior -->
	
	<components:menuSuperior animal="@{animal}"
							 sndChannel="@{sndChannel}"
							 snd="{snd}"
							 timer="@{timer}"
							 timerAviso="@{timerAviso}">
	</components:menuSuperior>

</s:Group>
